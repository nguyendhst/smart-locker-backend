// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: locker_sensor.sql

package sqlc

import (
	"context"
)

const getSensorsOfLocker = `-- name: GetSensorsOfLocker :many
SELECT sensor_id FROM locker_sensor WHERE locker_id = ?
`

func (q *Queries) GetSensorsOfLocker(ctx context.Context, lockerID int32) ([]int32, error) {
	rows, err := q.query(ctx, q.getSensorsOfLockerStmt, getSensorsOfLocker, lockerID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []int32{}
	for rows.Next() {
		var sensor_id int32
		if err := rows.Scan(&sensor_id); err != nil {
			return nil, err
		}
		items = append(items, sensor_id)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
