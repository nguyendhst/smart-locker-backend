// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0

package sqlc

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
)

type LockersStatus string

const (
	LockersStatusUsed        LockersStatus = "used"
	LockersStatusAvailable   LockersStatus = "available"
	LockersStatusMalfunction LockersStatus = "malfunction"
)

func (e *LockersStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = LockersStatus(s)
	case string:
		*e = LockersStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for LockersStatus: %T", src)
	}
	return nil
}

type NullLockersStatus struct {
	LockersStatus LockersStatus
	Valid         bool // Valid is true if LockersStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullLockersStatus) Scan(value interface{}) error {
	if value == nil {
		ns.LockersStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.LockersStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullLockersStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return ns.LockersStatus, nil
}

type UsersRole string

const (
	UsersRoleAdmin    UsersRole = "admin"
	UsersRoleCustomer UsersRole = "customer"
)

func (e *UsersRole) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UsersRole(s)
	case string:
		*e = UsersRole(s)
	default:
		return fmt.Errorf("unsupported scan type for UsersRole: %T", src)
	}
	return nil
}

type NullUsersRole struct {
	UsersRole UsersRole
	Valid     bool // Valid is true if UsersRole is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUsersRole) Scan(value interface{}) error {
	if value == nil {
		ns.UsersRole, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UsersRole.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUsersRole) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return ns.UsersRole, nil
}

type Locker struct {
	ID           int32         `json:"id"`
	LockerNumber int32         `json:"lockerNumber"`
	Location     string        `json:"location"`
	Status       LockersStatus `json:"status"`
	NfcSig       string        `json:"nfcSig"`
	CreatedAt    sql.NullTime  `json:"createdAt"`
	LastModified sql.NullTime  `json:"lastModified"`
}

type LockerUser struct {
	ID           int32        `json:"id"`
	UserID       int32        `json:"userID"`
	LockerID     int32        `json:"lockerID"`
	CreatedAt    sql.NullTime `json:"createdAt"`
	LastModified sql.NullTime `json:"lastModified"`
}

type User struct {
	ID             int32        `json:"id"`
	Name           string       `json:"name"`
	PasswordHashed string       `json:"passwordHashed"`
	Email          string       `json:"email"`
	Role           UsersRole    `json:"role"`
	CreatedAt      sql.NullTime `json:"createdAt"`
	LastModified   sql.NullTime `json:"lastModified"`
}
