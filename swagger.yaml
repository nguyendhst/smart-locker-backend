openapi: 3.0.0
servers:
    # Added by API Auto Mocking Plugin
    - description: SwaggerHub API Auto Mocking
      url: https://virtserver.swaggerhub.com/nguyendhst/smart-locker/1.0.0
info:
    version: "1.0.0"
    title: smart-locker-backend-api
    description: The API for the Smart Locker project
paths:
    "/users/login":
        get:
            tags:
                - Users
            description: Login to the system
            operationId: login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserLoginInfo"
                required: true
            responses:
                "200":
                    description: successfully logged in
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SessionToken"
                
    "/users/register":
        post:
            tags:
                - Users
            operationId: register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UserRegistrationInfo"
                required: true
            responses:
                "201":
                    description: successfully registered user
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SessionToken"

    "/feeds/all":
        get:
            tags:
                - Feeds
            description: Get all feeds
            operationId: getAllFeeds
            parameters:
              - in: header
                name: Bearer
                schema:
                  type: string
                required: true
                description: The JWT token

            responses:
                "200":
                    description: successfully retrieved all feeds
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/AllUserFeedData"
                                

    "/locker/lock":
        post:
            tags:
                - Locker
            description: Lock the locker
            operationId: lockLocker
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/LockUnlockRequest"
                required: true
            responses:
                "200":
                    description: successfully locked the locker
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/LockSuccess"
                "208":
                    description: the locker is already locked
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AlreadyLocked"

    "/locker/unlock":
          post: 
              tags:
                  - Locker
              description: Unlock the locker
              operationId: unlockLocker
              requestBody:
                  content:
                      application/json:
                          schema:
                              $ref: "#/components/schemas/LockUnlockRequest"
                  required: true

              responses:
                  "200":
                      description: successfully unlocked the locker
                      content:
                          application/json:
                              schema:
                                  $ref: "#/components/schemas/UnlockSuccess"
                  "208":
                      description: the locker is already unlocked
                      content:
                          application/json:
                              schema:
                                  $ref: "#/components/schemas/AlreadyUnlocked"


            
           
components:
    schemas:
        UserID:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                    example: 0729a580-2240-11e6-9eb5-0002a5d5c51b
        UserLoginInfo:
            type: object
            properties:
                email:
                    type: string
                    format: email
                    example: "joe@gmail.com"
                password:
                    type: string
                    format: password
                    example: "password"
        UserRegistrationInfo:
            type: object
            properties:
                email:
                    type: string
                    format: email
                    example: "joe@gmail.com"
                password:
                    type: string
                    format: password
                    example: "password"
        SessionToken:
              type: object
              properties:
                  token:
                      type: string
                      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        AllUserFeedData:
              type: object
              properties:
                  lockers:
                      type: array
                      items:
                          $ref: "#/components/schemas/LockerFeeds"
        
        LockerFeeds:
              type: object
              properties:
                  id:
                      type: string
                      example: "1"
                  feeds:
                      type: array
                      items:
                          $ref: "#/components/schemas/FeedData"
        FeedData:
              type: object
              properties:
                  id:
                      type: string
                      example: "1"
                  feed: 
                      type: string
                      example: "locker1-lock"
                  feed_type:
                      type: string
                      example: "lock"
                  feed_data:
                      type: object
                      $ref: "#/components/schemas/FeedDataMap"
        
        FeedDataMap:
              type: object
              properties:
                  "20.0":
                      type: string
                      example: "2023-03-21T03:21:19Z"
                  "21.0":
                      type: string
                      example: "2023-03-21T03:21:25Z"
        
        LockSuccess:
              type: object
              properties:
                  message:
                      type: string
                      example: "Successfully locked the locker"
        
        AlreadyLocked:
              type: object
              properties:
                  message:
                      type: string
                      example: "The locker is already locked"

        UnlockSuccess:
              type: object
              properties:
                  message:
                      type: string
                      example: "Successfully unlocked the locker"
          

        AlreadyUnlocked:
              type: object
              properties:
                  message:
                      type: string
                      example: "The locker is already unlocked"

                       
        LockUnlockRequest:
              type: object
              properties:
                  nfc_sig:
                      type: string
                      example: "testnfc"